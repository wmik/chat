generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["neon_auth", "public"]
}

model users_sync {
  raw_json   Json
  id         String    @id @default(dbgenerated("(raw_json ->> 'id'::text)"))
  name       String?   @default(dbgenerated("(raw_json ->> 'display_name'::text)"))
  email      String?   @default(dbgenerated("(raw_json ->> 'primary_email'::text)"))
  created_at DateTime? @default(dbgenerated("to_timestamp((trunc((((raw_json ->> 'signed_up_at_millis'::text))::bigint)::double precision) / (1000)::double precision))")) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)

  @@index([deleted_at])
  @@schema("neon_auth")
}

model threads {
  id         String     @id @default(uuid())
  title      String?
  user_id    String
  custom     Json       @default("{}")
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now())
  deleted_at DateTime?
  messages   messages[]

  @@index([user_id])
  @@schema("public")
}

model messages {
  id         String    @id @default(uuid())
  content    String
  thread_id  String
  custom     Json      @default("{}")
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
  thread     threads   @relation(fields: [thread_id], references: [id], onDelete: Cascade)

  @@schema("public")
}
